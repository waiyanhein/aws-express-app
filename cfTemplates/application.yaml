AWSTemplateFormatVersion: "2010-09-09"
Description: "Application stack"
Parameters:
  InstanceType:
    Default: 't2.micro'
    Type: String
  SSHKeyName:
    Default: 'DefaultKeyPair'
    Type: String
  NetworkStackName:
    Default: 'MenApiNetworkStack'
    Type: String
  AppPort:
    Default: '3000'
    Type: String
  AZa:
    Default: 'eu-west-2a'
    Type: String
  AZb:
    Default: 'eu-west-2b'
    Type: String
  VpcExportSuffix:
    Default: "Vpc"
    Type: String
  AsgSgExportSuffix:
    Default: "AsgSecurityGroup"
    Type: String
  PublicSubnetAExportSuffix:
    Default: "PublicSubnetA"
    Type: String
  PublicSubnetBExportSuffix:
    Default: "PublicSubnetB"
    Type: String
  ApiPrivateSubnetAExportSuffix:
    Default: "ApiPrivateSubnetA"
    Type: String
  ApiPrivateSubnetBExportSuffix:
    Default: "ApiPrivateSubnetB"
    Type: String
Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: HVM64
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    t2.large:
      Arch: HVM64
    m1.small:
      Arch: HVM64
    m1.medium:
      Arch: HVM64
    m1.large:
      Arch: HVM64
    m1.xlarge:
      Arch: HVM64
    m2.xlarge:
      Arch: HVM64
    m2.2xlarge:
      Arch: HVM64
    m2.4xlarge:
      Arch: HVM64
    m3.medium:
      Arch: HVM64
    m3.large:
      Arch: HVM64
    m3.xlarge:
      Arch: HVM64
    m3.2xlarge:
      Arch: HVM64
    m4.large:
      Arch: HVM64
    m4.xlarge:
      Arch: HVM64
    m4.2xlarge:
      Arch: HVM64
    m4.4xlarge:
      Arch: HVM64
    m4.10xlarge:
      Arch: HVM64
    c1.medium:
      Arch: HVM64
    c1.xlarge:
      Arch: HVM64
    c3.large:
      Arch: HVM64
    c3.xlarge:
      Arch: HVM64
    c3.2xlarge:
      Arch: HVM64
    c3.4xlarge:
      Arch: HVM64
    c3.8xlarge:
      Arch: HVM64
    c4.large:
      Arch: HVM64
    c4.xlarge:
      Arch: HVM64
    c4.2xlarge:
      Arch: HVM64
    c4.4xlarge:
      Arch: HVM64
    c4.8xlarge:
      Arch: HVM64
    g2.2xlarge:
      Arch: HVMG2
    g2.8xlarge:
      Arch: HVMG2
    r3.large:
      Arch: HVM64
    r3.xlarge:
      Arch: HVM64
    r3.2xlarge:
      Arch: HVM64
    r3.4xlarge:
      Arch: HVM64
    r3.8xlarge:
      Arch: HVM64
    i2.xlarge:
      Arch: HVM64
    i2.2xlarge:
      Arch: HVM64
    i2.4xlarge:
      Arch: HVM64
    i2.8xlarge:
      Arch: HVM64
    d2.xlarge:
      Arch: HVM64
    d2.2xlarge:
      Arch: HVM64
    d2.4xlarge:
      Arch: HVM64
    d2.8xlarge:
      Arch: HVM64
    hi1.4xlarge:
      Arch: HVM64
    hs1.8xlarge:
      Arch: HVM64
    cr1.8xlarge:
      Arch: HVM64
    cc2.8xlarge:
      Arch: HVM64
  AWSRegionArch2AMI:
    us-east-1:
      HVM64: ami-0ff8a91507f77f867
      HVMG2: ami-0a584ac55a7631c0c
    us-west-2:
      HVM64: ami-a0cfeed8
      HVMG2: ami-0e09505bc235aa82d
    us-west-1:
      HVM64: ami-0bdb828fd58c52235
      HVMG2: ami-066ee5fd4a9ef77f1
    eu-west-1:
      HVM64: ami-047bb4163c506cd98
      HVMG2: ami-0a7c483d527806435
    eu-west-2:
      HVM64: ami-f976839e
      HVMG2: NOT_SUPPORTED
    eu-west-3:
      HVM64: ami-0ebc281c20e89ba4b
      HVMG2: NOT_SUPPORTED
    eu-central-1:
      HVM64: ami-0233214e13e500f77
      HVMG2: ami-06223d46a6d0661c7
    ap-northeast-1:
      HVM64: ami-06cd52961ce9f0d85
      HVMG2: ami-053cdd503598e4a9d
    ap-northeast-2:
      HVM64: ami-0a10b2721688ce9d2
      HVMG2: NOT_SUPPORTED
    ap-northeast-3:
      HVM64: ami-0d98120a9fb693f07
      HVMG2: NOT_SUPPORTED
    ap-southeast-1:
      HVM64: ami-08569b978cc4dfa10
      HVMG2: ami-0be9df32ae9f92309
    ap-southeast-2:
      HVM64: ami-09b42976632b27e9b
      HVMG2: ami-0a9ce9fecc3d1daf8
    ap-south-1:
      HVM64: ami-0912f71e06545ad88
      HVMG2: ami-097b15e89dbdcfcf4
    us-east-2:
      HVM64: ami-0b59bfac6be064b78
      HVMG2: NOT_SUPPORTED
    ca-central-1:
      HVM64: ami-0b18956f
      HVMG2: NOT_SUPPORTED
    sa-east-1:
      HVM64: ami-07b14488da8ea02a0
      HVMG2: NOT_SUPPORTED
    cn-north-1:
      HVM64: ami-0a4eaf6c4454eda75
      HVMG2: NOT_SUPPORTED
    cn-northwest-1:
      HVM64: ami-6b6a7d09
      HVMG2: NOT_SUPPORTED
Resources:
  PrivateInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
        - "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
      Tags:
        - Key: Name
          Value: !Join ["-", [ !Ref AWS::StackName, "PrivateInstanceRole" ]]
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref PrivateInstanceRole
  PrivateInstanceLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Join ["-", [ !Ref AWS::StackName, "LaunchTemplate" ]]
      LaunchTemplateData:
        ImageId:
          Fn::FindInMap:
             - AWSRegionArch2AMI
             - Ref: AWS::Region
             - Fn::FindInMap:
                - AWSInstanceType2Arch
                - Ref: InstanceType
                - Arch
        IamInstanceProfile:
          Arn: !GetAtt InstanceProfile.Arn
        InstanceType: !Ref InstanceType
        KeyName: !Ref SSHKeyName
        SecurityGroupIds:
          - Fn::ImportValue: !Join ["-", [ !Ref NetworkStackName, !Ref AsgSgExportSuffix ]]
        UserData:
          Fn::Base64:
            |
            #!/bin/bash
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
            source ~/.bashrc
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
            nvm install 16
            nvm use 16
            sudo yum update -y
            sudo yum install git -y
            cd /home/ec2-user
            git clone https://github.com/waiyanhein/express-app.git
            cd /home/ec2-user/express-app
            sudo chmod -R 755 .
            npm i
            sudo chmod -R 755 .
            node app.js
            EOF
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Join ["-", [ !Ref AWS::StackName, "TG" ]]
      Port: !Ref AppPort
      Protocol: HTTP
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 120
      HealthCheckPath: /health
      VpcId:
        Fn::ImportValue: !Join ["-", [ !Ref NetworkStackName, !Ref VpcExportSuffix ]]
      Tags:
        - Key: Name
          Value: !Join ["-", [ !Ref AWS::StackName, "TargetGroup" ]]
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Join ["-", [ !Ref AWS::StackName, "LB" ]]
      Type: application
      IpAddressType: ipv4
      Scheme: internet-facing
      Subnets:
        - Fn::ImportValue: !Join ["-", [ !Ref NetworkStackName, !Ref PublicSubnetAExportSuffix ]]
        - Fn::ImportValue: !Join ["-", [ !Ref NetworkStackName, !Ref PublicSubnetBExportSuffix ]]
      SecurityGroups:
        - Fn::ImportValue: !Join ["-", [ !Ref NetworkStackName, !Ref AsgSgExportSuffix ]]
      Tags:
        - Key: Name
          Value: !Join ["-", [ !Ref AWS::StackName, "LoadBalancer" ]]
  # check this link for implementing https listener: https://computingforgeeks.com/configure-aws-application-load-balancer-with-cloudformation/?utm_content=cmp-true
  LbHttpListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
  PrivateInstanceAsg:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Join ["-", [ !Ref AWS::StackName, "ASG" ]]
      LaunchTemplate:
        LaunchTemplateId: !Ref PrivateInstanceLaunchTemplate
        Version: !GetAtt PrivateInstanceLaunchTemplate.LatestVersionNumber
      MinSize: 1
      MaxSize: 2
      DesiredCapacity: 1
      VPCZoneIdentifier:
        - Fn::ImportValue: !Join ["-", [ !Ref NetworkStackName, !Ref ApiPrivateSubnetAExportSuffix ]]
        - Fn::ImportValue: !Join ["-", [ !Ref NetworkStackName, !Ref ApiPrivateSubnetBExportSuffix ]]
      TargetGroupARNs:
        - !Ref TargetGroup
      Tags:
        - Key: Name
          Value: !Join ["-", [ !Ref AWS::StackName, "PrivateInstanceAsg" ]]
          PropagateAtLaunch: true

